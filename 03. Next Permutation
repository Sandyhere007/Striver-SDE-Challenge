
1. FInd pivot element 
   run a reverse loop from i = n-2 to 0
   if(arr[i]<arr[i+1]) it is your pivot store it in ind veriable.
2. if no pvot means array is at its last permutation  
   reverse the array to get the first permutationw which is our answer. 
3. from backside itself find a element just greater then the ind ans swap it with ind.
4. reverse array from ind+1 to end.
5. Return array.

#include <bits/stdc++.h> 
vector<int> nextPermutation(vector<int> &permutation, int n)
{
    //  Write your code here.

    int index = -1;
    
    for(int i = n-2 ; i>=0; i--){
        if(permutation[i]<permutation[i+1]){
            index = i;
            break;
        }
    }

    if(index== -1){
        reverse(permutation.begin(),permutation.end());
        return permutation;
    }

    for(int i = n-1 ; i >index ; i--){
        if(permutation[i]> permutation[index]){
            swap(permutation[i],permutation[index]);
            break;
        }
    }
    reverse(permutation.begin() + index + 1, permutation.end());

    return permutation;


}
