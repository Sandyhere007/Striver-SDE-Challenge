#include <bits/stdc++.h>

long getTrappedWater(long *arr, int n) {
    long prefix[n];
    long suffix[n];
    long waterTrapped = 0;
    prefix[0]= arr[0];
    for(int i = 1 ; i< n ; i++){
        prefix[i] = max(prefix[i-1],arr[i]);
    }
    suffix[n-1] = arr[n-1];
    for(int i = n-2; i>=0; i--){
        suffix[i]= max(suffix[i+1],arr[i]);
    }

    for(int i = 0 ; i< n ; i++){
        waterTrapped+=min(prefix[i],suffix[i])-arr[i];
    }
    return waterTrapped;
}

// long getTrappedWater(long *arr, int n){
//     // Write your code here.
//     // First approach we will be traversing the array and for every index we are goind to find the leftmax and rightmax
//     // and laterly min(leftmax,rightmax) - arrr[i] will be added to waterTrapped


//     int waterTrapped = 0 ;
//     int j;
//     for(int i = 0 ;  i<n ; i++){
//         j=i;
//         long leftMax = 0 , rightMax = 0;
//         while(j>=0){
//             leftMax = max(leftMax,arr[j]);
//             j--;
//         }

//         j=i;
//         while(j<n){
//             rightMax = max(rightMax,arr[j]);
//             j++;
//         }
//         waterTrapped += min(leftMax,rightMax) - arr[i];
//     }
//     return waterTrapped;
// }
